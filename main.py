import streamlit as st
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go

import plotly.io as pio
pio.templates.default = "plotly_white"

st.title("üì¶ Supply Chain Data Dashboard")

uploaded_file = st.file_uploader("Upload your supply_chain_data.csv file", type="csv")

if uploaded_file:
    data = pd.read_csv(uploaded_file)

    st.subheader("1Ô∏è‚É£ Price vs Revenue Generated")
    fig1 = px.scatter(data, x='Price', y='Revenue generated',
                      color='Product type',
                      hover_data=['Number of products sold'],
                      trendline="ols")
    st.plotly_chart(fig1)

    st.subheader("2Ô∏è‚É£ Sales by Product Type")
    sales_data = data.groupby('Product type')['Number of products sold'].sum().reset_index()
    pie1 = px.pie(sales_data, values='Number of products sold', names='Product type',
                  hole=0.5, title='Sales by Product Type',
                  color_discrete_sequence=px.colors.qualitative.Pastel)
    pie1.update_traces(textposition='inside', textinfo='percent+label')
    st.plotly_chart(pie1)

    st.subheader("3Ô∏è‚É£ Revenue by Shipping Carrier")
    total_revenue = data.groupby('Shipping carriers')['Revenue generated'].sum().reset_index()
    fig2 = go.Figure()
    fig2.add_trace(go.Bar(x=total_revenue['Shipping carriers'], 
                          y=total_revenue['Revenue generated']))
    fig2.update_layout(title='Total Revenue by Shipping Carrier',
                       xaxis_title='Shipping Carrier',
                       yaxis_title='Revenue Generated')
    st.plotly_chart(fig2)

    st.subheader("4Ô∏è‚É£ Avg Lead Time vs Avg Manufacturing Costs")
    avg_lead_time = data.groupby('Product type')['Lead time'].mean().reset_index()
    avg_cost = data.groupby('Product type')['Manufacturing costs'].mean().reset_index()
    result = pd.merge(avg_lead_time, avg_cost, on='Product type')
    result.rename(columns={'Lead time': 'Average Lead Time', 
                           'Manufacturing costs': 'Average Manufacturing Costs'}, inplace=True)
    st.dataframe(result)

    st.subheader("5Ô∏è‚É£ Revenue by SKU")
    st.plotly_chart(px.line(data, x='SKU', y='Revenue generated', title='Revenue Generated by SKU'))

    st.subheader("6Ô∏è‚É£ Stock Levels by SKU")
    st.plotly_chart(px.line(data, x='SKU', y='Stock levels', title='Stock Levels by SKU'))

    st.subheader("7Ô∏è‚É£ Order Quantity by SKU")
    st.plotly_chart(px.bar(data, x='SKU', y='Order quantities', title='Order Quantity by SKU'))

    st.subheader("8Ô∏è‚É£ Shipping Costs by Carrier")
    st.plotly_chart(px.bar(data, x='Shipping carriers', y='Shipping costs', title='Shipping Costs by Carrier'))

    st.subheader("9Ô∏è‚É£ Cost Distribution by Transportation Mode")
    st.plotly_chart(px.pie(data, values='Costs', names='Transportation modes',
                           title='Cost Distribution by Transportation Mode',
                           hole=0.5, color_discrete_sequence=px.colors.qualitative.Pastel))

    st.subheader("üîü Average Defect Rates by Product Type")
    defects = data.groupby('Product type')['Defect rates'].mean().reset_index()
    st.plotly_chart(px.bar(defects, x='Product type', y='Defect rates',
                           title='Average Defect Rates by Product Type'))

    st.subheader("üîÅ Defect Rates by Transportation Mode")
    pivot_table = pd.pivot_table(data, values='Defect rates', 
                                 index=['Transportation modes'], aggfunc='mean')
    st.plotly_chart(px.pie(values=pivot_table["Defect rates"], 
                           names=pivot_table.index,
                           title='Defect Rates by Transportation Mode',
                           hole=0.5, color_discrete_sequence=px.colors.qualitative.Pastel))
else:
    st.info("üìÑ Please upload the `supply_chain_data.csv` file to begin.")
